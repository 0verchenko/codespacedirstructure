#!/bin/bash

this_dir="$(cd "$(dirname "$0")" && pwd)"
script_name="$(basename "$0")"

. $this_dir/avid-bits/version

bold=$(tput bold)
normal=$(tput sgr0)


put_all_nodes_into_standby()
{
    crm node standby node-0
    crm node standby node-1

    # Give some time for the nodes to be put in "standby" mode
    while : ; do
        if ! crm_mon -1 | grep -q "Started"; then
            break
        fi
        sleep 1
    done
}

put_all_nodes_back_online()
{
    crm node online node-0
    crm node online node-1
}

seagate_usm()
{
    local product_name="$(dmidecode -s system-product-name)"
    [ "$product_name" != "Laguna Seca" ] && { echo 'INFO: not "Laguna Seca"'; exit 1; }

    # Seagate's tool dosn't show help without agruments
    local args="$@"
    if [ -z "$args" ]; then
        local args="-h"
    fi

    # Seagate requires to run this script from its directory ...
    pushd ${this_dir}/seagate/laguna-seca/fwtool-usm

    if [ "$args" == "--showsystems" ]; then
        # dirty approach to run a different tool ... 
        ./descriptor.py -f ${this_dir}/seagate/laguna-seca/fwtool-usm/avid_nexis_v0.1_configuration_descriptor.xml --showsystems
        exit $?
    fi

    # Stop HA resources before the update
    local perform_update=""
    if echo "$args" | grep -q -- "--perform_update"; then
        put_all_nodes_into_standby
        perform_update="true"
    fi
    ./fwtool.py $args
    if [ "$perform_update" == "true" ]; then
        put_all_nodes_back_online
    fi

    exit $?
}

seagate_3rd_party()
{
    local args="$@"

    # Stop HA resources before the update
    local perform_update=""
    if echo "$args" | grep -q -- "--update"; then
        put_all_nodes_into_standby
        perform_update="true"
    fi
    ${this_dir}/seagate-avid-bits/updater-3rd-party-firmware $args
    if [ "$perform_update" == "true" ]; then
        put_all_nodes_back_online
    fi

    exit $?
}

update_all()
{
    #${this_dir}/seagate-avid-bits/updater-usm-laguna-seca --update-all
    ${this_dir}/seagate-avid-bits/updater-3rd-party-firmware --update-all
}

usage()
{
    cat << EOF

${bold}Steps to update Firmware:${normal}

    1. Update USM components
    2. Update 3rd party components


=====================================
    ${bold}1. Update USM components${normal}
=====================================

    ${bold}Don't update two controllers at the same time.${normal}

    1.1. Start with updating the controller in slot-0 (some components can be updatet only from there).

    1.2. Figure out which '--system_index' parameter to use for the particular AVID NEXIS:

        $script_name seagate-usm --showsystems

    1.3. Start the update process (replace 'n' with system index):

        $script_name seagate-usm -c --target=auto --system_index=n --perform_updates

    The system may reboot during the update without any notification.
    Check your 'ssh' session to see if/when the system has rebooted.

    1.4. Repeat step "1.3" till there is this message in the end of output:

        fwtool.py::SUCCESS: Mismatch count: 0

    1.5. Repeat all above steps for the controller in slot-1.


    ${bold}NOTE:${normal} to just check the current installed versions of USM firmware, do:

        $script_name seagate-usm -c --target=auto --system_index=n --compare_versions


=====================================
    ${bold}2. Update 3rd party components${normal}
=====================================

    2.1. Run this command to update all 3rd party components:

        $script_name seagate-3rd-party --update-all

    The system may reboot during the update without any notification.

    2.2. Repeat step "2.1" till you see all components are up to date.


=====================================
${bold}Other options:${normal}

    --expert-help       Show some additional info
    -V                  Show version

EOF
}

expert_help()
{
    cat << EOF
Usage: $script_name [<component>|<key>]

Components:
    seagate-usm             Update USM, 'Laguna Seca' only
    seagate-3rd-party       Update 3rd party components (e.g. IDT retimer, PCIe eeprom)

Keys:
    -V                      Show version

EOF
}


[ "$#" -eq 0 ] && { usage; exit 1; }

while [ "$#" -gt 0 ]; do
    case "$1" in
        seagate-usm) shift && seagate_usm "$@";;
        seagate-3rd-party) shift && seagate_3rd_party "$@";;
        --update-all) update_all;;

        --expert-help) expert_help && exit 0;;
        -h) usage && exit 0;;
        -V) echo "$script_name v${updater_version}" && exit 0;;
        *) usage && exit 1;;
    esac
    shift
done

